---
name: Build Kernel Package

# yamllint disable-line rule:truthy
on:
  [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Free up disk space for the CI
        uses: AdityaGarg8/remove-unwanted-software@v1
        with:
          remove-android: 'true'
          remove-dotnet: 'true'
          remove-haskell: 'true'

      - name: 'Checkout Repo'
        uses: actions/checkout@v2

      - name: Build script
        id: build
        run: |
          VERSION=$(grep ^KERNEL_VERSION build.sh | head -n1| cut -d = -f2)
          REL=$(grep "PKGREL=\d*" build.sh | cut -d = -f2)
          #REL=$( git tag |grep -F $VERSION|sort -r|head -n1|tr -d v)
          echo Building $VERSION-$REL
          echo "::set-output name=tag::${VERSION}-${REL}"

          DOCKER_IMAGE=debian:unstable
          docker pull ${DOCKER_IMAGE}
          docker run -t -v "$(pwd):/repo" ${DOCKER_IMAGE} /bin/bash -c 'cd /repo && ./build.sh'
          echo Contents of '$(pwd)/packages'
          ls -l $(pwd)/packages

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: linux-T2-${{ steps.build.outputs.tag }}
          path: |
            packages/Packages.gz
            packages/sha256
            packages/*.deb
            packages/kernel_config*

      - name: Release
        if: github.ref == 'refs/heads/Mainline'
        uses: softprops/action-gh-release@v1
        with:
          files: |
             packages/Packages.gz
             packages/sha256
             packages/*.deb
             packages/kernel_config*
          tag_name: v${{ steps.build.outputs.tag }}
          body_path: ${{ github.workspace }}/.github/workflows/instructions.txt
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  Publish:
    needs: [Build]
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout Repo'
        uses: actions/checkout@v2

      - name: Configure GPG Key
        run: |
          echo -n "$GPG_SIGNING_KEY" | base64 --decode | gpg --import
        env:
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}

      - name: Get the kernel upgrade script
        id: publish
        run: |
          git clone -b script https://github.com/t2linux/T2-Ubuntu-Kernel.git
          latest=$(curl -sL https://github.com/t2linux/T2-Ubuntu-Kernel/releases/latest/ | grep "<title>Release" | awk -F " " '{print $2}' )
          latestkver=$(echo $latest | cut -d "v" -f 2)
          echo "ver=${latest}" >> $GITHUB_ENV
          sed -i "s/KVER/${latestkver}/g" ${{ github.workspace }}/T2-Ubuntu-Kernel/t2-kernel-script/DEBIAN/control
          chmod 755 ${{ github.workspace }}/T2-Ubuntu-Kernel/t2-kernel-script/DEBIAN/postinst
          cd ${{ github.workspace }}/T2-Ubuntu-Kernel
          dpkg-deb --build --root-owner-group t2-kernel-script
          cd ${{ github.workspace }}
          git clone https://github.com/AdityaGarg8/t2-ubuntu-repo.git
          cp -r ${{ github.workspace }}/T2-Ubuntu-Kernel/t2-kernel-script.deb ${{ github.workspace }}/t2-ubuntu-repo
          cd ${{ github.workspace }}/t2-ubuntu-repo

          # Packages & Packages.gz
          dpkg-scanpackages --multiversion . > Packages
          gzip -k -f Packages

          # Release, Release.gpg & InRelease
          apt-ftparchive release . > Release
          gpg --default-key "${GPG_SIGNING_EMAIL}" -abs -o - Release > Release.gpg
          gpg --default-key "${GPG_SIGNING_EMAIL}" --clearsign -o - Release > InRelease
          cd ${{ github.workspace }}
        env:
          GPG_SIGNING_EMAIL: ${{ secrets.GPG_SIGNING_EMAIL }}
      - name: Publish
        if: github.ref == 'refs/heads/test'
        uses: cpina/github-action-push-to-another-repository@main
        env:
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
        with:
          source-directory: 't2-ubuntu-repo'
          destination-github-username: 'AdityaGarg8'
          destination-repository-name: 't2-ubuntu-repo'
          user-email: github-actions[bot]@users.noreply.github.com
          user-name: github-actions[bot]
          target-branch: main
          commit-message: Update to kernel ${{ env.ver }}
